<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd"
       default-init-method="init"
>
    <!--    test 例子-->
    <bean id="testDao" class="space.yl.spring.common.dao.impl.TestDaoImpl" scope="prototype"/>


    <!--            基于xml的配置实例              -->
    <!--配置实例-->
    <bean id="customer01" init-method="postConstructTest"
          class="space.yl.spring.hw.hw0314.entity.Customer"
          scope="prototype"/>
    <bean id="customer02" class="space.yl.spring.hw.hw0314.entity.Customer" scope="prototype"/>
    <!--注入简单值-->
    <bean id="customer03" class="space.yl.spring.hw.hw0314.entity.Customer" scope="prototype">
        <property name="cname">
            <value>doushuai</value>
        </property>
        <property name="cid">
            <value>123456</value>
        </property>
    </bean>
    <bean id="customer04" class="space.yl.spring.hw.hw0314.entity.Customer" scope="prototype">
        <property name="cname" value="xiangyu"/>
        <property name="cid" value="456789"/>
    </bean>
    <!--注入另一个对象-->
    <bean id="student01" class="space.yl.spring.hw.hw0314.entity.Student" scope="prototype">
        <property name="address" ref="address02"/>
        <property name="name" value="slkdjfkl"/>
    </bean>
    <bean id="address02" class="space.yl.spring.hw.hw0314.entity.Address" scope="prototype">
        <property name="country" value="China"/>
        <property name="province" value="henan"/>
        <property name="cityName" value="zhengzhou"/>
    </bean>
    <!--使用构造函数 注入简单值-->
    <bean id="emp01" class="space.yl.spring.hw.hw0314.entity.Employee" scope="prototype">
        <!--隐含自动类型转换 默认对位注入 可以使用name 指定注入参数-->
        <constructor-arg value="100" name="eid"/>
        <constructor-arg value="Jeff" name="ename"/>
    </bean>
    <!--使用构造函数, 注入依赖对象-->
    <bean id="emp02" class="space.yl.spring.hw.hw0314.entity.Employee" scope="prototype">
        <constructor-arg value="110" name="eid"/>
        <constructor-arg value="Jack" name="ename"/>
        <constructor-arg ref="address01" name="obj"/>
    </bean>


    <!--注入继承bean 使用parent属性-->
    <bean id="emp05" class="space.yl.spring.hw.hw0314.entity.Employee" scope="prototype" parent="emp01">
        <constructor-arg name="obj" ref="answer01"/>
    </bean>
    <!--容器感知类工具-->
    <bean id="appUtil" class="space.yl.spring.hw.hw0314.util.AppUtil"/>


    <!--使用工厂方法进行DI-->
    <bean id="singleA" class="space.yl.spring.hw.hw0314.entity.SingletonA" factory-method="getInstance"/>
    <bean id="printable" class="space.yl.spring.hw.hw0314.util.PrintableFactory"
          factory-method="getPrintable"/>
    <bean id="printFactory" class="space.yl.spring.hw.hw0314.util.PrintableFactory"/>
    <bean id="printImpl" class="space.yl.spring.hw.hw0314.util.PrintableFactory"
          factory-method="showPrint"
          factory-bean="printFactory"/>

    <!--byName自动装配模式 属性的名称必须和配置的bean一致-->
    <bean id="b" class="space.yl.spring.hw.hw0314.entity.AutoB"/>
    <!--    <bean id="b1" class="AutoB"/>-->
    <!--    <bean id="byNameDemo" class="AutoA" autowire="byName"/>-->
    <!--byType 如果配置多个同样类型的 自动注入将发生异常-->
    <bean id="byTypeDemo" class="space.yl.spring.hw.hw0314.entity.AutoA" autowire="byType"/>
    <!--以参数化程度最高的构造函数来执行注入-->
    <bean id="byConstructor" class="space.yl.spring.hw.hw0314.entity.AutoA" autowire="constructor"/>

    <!--基于注解 需要配置包扫描  需要xml头部添加命名空间:
    xmlns:context="http://www.springframework.org/schema/context ...-->

    <context:component-scan base-package="space.yl.spring"/>
    <!--测试Required-->
    <bean id="studentImpl01" class="space.yl.spring.hw.hw0314.service.Impl.StudentImpl">
        <property name="age" value="15"/>
    </bean>
    <!--测试Autowire 自动选择注入方式 先找类型 再找名字 取不到唯一则报错 不使用构造函数也能注入 -->
    <!--<context:annotation-config/>--><!--如果存在component-scan 则此配置可不写-->
    <bean id="textEditor" class="space.yl.spring.hw.hw0314.entity.TextEditor"/>
    <!--    <bean id="checker01" class="SpellChecker"/>-->
    <bean id="checker02" class="space.yl.spring.hw.hw0314.entity.SpellChecker"/>
    <bean id="checker03" class="space.yl.spring.hw.hw0314.entity.SpellChecker"/>
    <bean id="byPhone" class="space.yl.spring.hw.hw0314.service.Impl.LearnByPhone"/>
    <bean id="byComputer" class="space.yl.spring.hw.hw0314.service.Impl.LearnByComputer"/>
    <bean id="people01" class="space.yl.spring.hw.hw0314.entity.People"/>



</beans>